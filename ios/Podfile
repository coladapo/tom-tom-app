require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'

platform :ios, '13.0'
install! 'cocoapods', :deterministic_uuids => false

production = ENV["PRODUCTION"] == "1"

target 'TomTom' do
  config = use_native_modules!

  # Flags change depending on the env values.
  flags = get_default_flags()

  use_react_native!(
    :path => config[:reactNativePath],
    # Hermes is now enabled by default. Disable by setting this flag to false.
    # Upcoming versions of React Native may rely on get_default_flags(), but
    # we make it explicit here to aid in the React Native upgrade process.
    :hermes_enabled => true,
    :fabric_enabled => flags[:fabric_enabled],
    # Enables Flipper.
    #
    # Note that if you have use_frameworks! enabled, Flipper will not work and
    # you should disable the next line.
    :flipper_configuration => FlipperConfiguration.enabled,
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  target 'TomTomTests' do
    inherit! :complete
    # Pods for testing
  end

  # Fix for M1/M2 Macs
  post_install do |installer|
    react_native_post_install(
      installer,
      # Set `mac_catalyst_enabled` to `true` in order to apply patches
      # necessary for Mac Catalyst builds
      :mac_catalyst_enabled => false
    )
    __apply_Xcode_12_5_M1_post_install_workaround(installer)
    
    # Fix for various build issues
    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
        # Ensure iOS deployment target
        config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '13.0'
        
        # Disable warnings for pods
        config.build_settings['GCC_WARN_INHIBIT_ALL_WARNINGS'] = 'YES'
        config.build_settings['CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER'] = 'NO'
        
        # Fix for RCTAppSetupUtils.h not found
        if target.name == 'React-RCTAppDelegate'
          config.build_settings['HEADER_SEARCH_PATHS'] ||= '$(inherited)'
          config.build_settings['HEADER_SEARCH_PATHS'] << ' "${PODS_ROOT}/Headers/Private/React-Core"'
          config.build_settings['HEADER_SEARCH_PATHS'] << ' "${PODS_CONFIGURATION_BUILD_DIR}/React-Core/React-Core.framework/Headers"'
        end
        
        # Fix for React-Core headers
        if target.name == 'React-Core'
          config.build_settings['HEADER_SEARCH_PATHS'] ||= '$(inherited)'
          config.build_settings['HEADER_SEARCH_PATHS'] << ' "$(PODS_ROOT)/boost"'
          config.build_settings['HEADER_SEARCH_PATHS'] << ' "$(PODS_ROOT)/DoubleConversion"'
          config.build_settings['HEADER_SEARCH_PATHS'] << ' "$(PODS_ROOT)/Headers/Private/React-Core"'
        end
        
        # Fix for C++ warnings
        config.build_settings['OTHER_CPLUSPLUSFLAGS'] ||= '$(inherited)'
        config.build_settings['OTHER_CPLUSPLUSFLAGS'] << ' -Wno-deprecated-declarations'
        config.build_settings['OTHER_CPLUSPLUSFLAGS'] << ' -Wno-nullability-completeness'
        
        # Ensure proper architectures for M1/M2
        config.build_settings['EXCLUDED_ARCHS[sdk=iphonesimulator*]'] = 'arm64'
        
        # Fix for duplicate symbols
        config.build_settings['OTHER_LDFLAGS'] ||= '$(inherited)'
        config.build_settings['OTHER_LDFLAGS'] << ' -Objc'
        config.build_settings['OTHER_LDFLAGS'] << ' -lc++'
        
        # Enable module support
        config.build_settings['CLANG_ENABLE_MODULES'] = 'YES'
        config.build_settings['ENABLE_BITCODE'] = 'NO'
      end
      
      # Fix for RNAsyncStorage
      if target.name == 'RNCAsyncStorage'
        target.build_configurations.each do |config|
          config.build_settings['CLANG_WARN_NULLABILITY_COMPLETENESS'] = 'NO'
        end
      end
    end
    
    # Fix search paths for the app target
    installer.aggregate_targets.each do |target|
      target.xcconfigs.each do |variant, xcconfig|
        xcconfig_path = target.client_root + target.xcconfig_relative_path(variant)
        IO.write(xcconfig_path, IO.read(xcconfig_path).gsub("DT_TOOLCHAIN_DIR", "TOOLCHAIN_DIR"))
      end
    end
    
    # Fix for Flipper on M1/M2 Macs
    installer.pods_project.build_configurations.each do |config|
      config.build_settings["EXCLUDED_ARCHS[sdk=iphonesimulator*]"] = "arm64"
    end
  end
end
